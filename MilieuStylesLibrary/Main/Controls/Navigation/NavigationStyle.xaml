<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MilieuStylesLibrary.Main">


   
    <!--#region Buttons -->
    <!-- Login Rounded Button-->
    <Style TargetType="{x:Type Button}" x:Key="UserProfileRoundedButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{StaticResource NavigationButtonColor}"/>
        <Setter Property="Margin" Value="15 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="{Binding ControlsOnSmallSizeAlignment}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border CornerRadius="25" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ExitButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="{DynamicResource ExitButtonColor}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Content" Value="Выход"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0 0 20 0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource NavigationExitMouseOverColor}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ExitButtonFontAwesome" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="{DynamicResource ExitButtonColor}"/>
        <!--<Setter Property="HorizontalAlignment" Value="Right"/>-->
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Content" Value="{StaticResource FontAwesomePowerOff}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource NavigationExitMouseOverColor}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region ListView -->

    <Style TargetType="ListViewItem" x:Key="BaseListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationForegroundColor}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="ListView" x:Key="BaseNavigationListView">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="ListView" x:Key="NavigationListView" BasedOn="{StaticResource BaseNavigationListView}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource BaseListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Background="White"                                         
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="10"                                        
                                        Height="50"
                                        Margin="0 0 0 1">
                                    <Grid IsHitTestVisible="False" >
                                        <Border CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius}"
                                                Name="Container"                                                 
                                                Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}}, Path=Background}" />
                                        <TextBlock Text="{Binding Icon}" 
                                                   FontFamily="{StaticResource FontAwesome}"
                                                   FontSize="24"
                                                   HorizontalAlignment="Left"
                                                   Margin="15 0 0 0"
                                                   VerticalAlignment="Center"/>
                                        <TextBlock Text="{Binding Title}" 
                                                   Margin="50 0 0 0"                                                                                                       
                                                   VerticalAlignment="Center"/>
                                        <Grid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Container}"/>
                                        </Grid.OpacityMask>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Container" Property="Background" Value="{DynamicResource NavigationButtonColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Container" Property="Background" Value="{DynamicResource NavigationButtonColor}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView" x:Key="NavigationListViewSmall" BasedOn="{StaticResource BaseNavigationListView}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource BaseListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Background="White"                                         
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="10"                                        
                                        Height="50"
                                        Margin="0 0 0 1">
                                    <Grid IsHitTestVisible="False" >
                                        <Border CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius}"
                                                Name="Container"                                                 
                                                Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}}, Path=Background}" />
                                        <TextBlock Text="{Binding Icon}" 
                                                   FontFamily="{StaticResource FontAwesome}"
                                                   FontSize="24"
                                                   HorizontalAlignment="Center"                                                   
                                                   VerticalAlignment="Center"/>


                                        <Grid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Container}"/>
                                        </Grid.OpacityMask>

                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Container" Property="Background" Value="{DynamicResource NavigationButtonColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Container" Property="Background" Value="{DynamicResource NavigationButtonColor}"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="SignatureText">
        <Setter Property="Foreground" Value="{DynamicResource NavigationForegroundColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>