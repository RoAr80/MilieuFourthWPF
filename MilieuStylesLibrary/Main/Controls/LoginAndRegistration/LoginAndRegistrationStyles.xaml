<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:systems="clr-namespace:System.Windows;assembly=PresentationFramework"                                        
                    xmlns:local="clr-namespace:MilieuStylesLibrary.Main">

    <!--#region Variables -->
    <systems:CornerRadius x:Key="SignInUpButtonCornerRadius">15</systems:CornerRadius>
    <!--#endregion-->

    <!--#region TextBox And PasswordBox -->
    <Style TargetType="{x:Type TextBlock}" x:Key="LogoText">
        <Setter Property="Foreground" Value="{DynamicResource LogoTextColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource MontserratMedium}"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Text" Value="milieu"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EmailTextBox">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PeachLightBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Margin" Value="0 50 0 0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="local:PlaceholderProperty.Value" Value="Email"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <TextBlock IsHitTestVisible="False"
                                   x:Name="placeholder"                                   
                                   Text="{TemplateBinding local:PlaceholderProperty.Value}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"                                   
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"                                                           
                                   >

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent }}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent }}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource LoginTextPassBoxFocusedForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LoginTextPassBoxMouseOverBorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LoginTextPassBoxMouseOverBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="LoginPasswordBoxStyle">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PeachLightBrush}"/>
        <Setter Property="local:PlaceholderProperty.Value" Value="Password"/>
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True"/>
        <Setter Property="Margin" Value="0 15 0 0"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding local:PlaceholderProperty.Value}"
                                   Tag="Placeholder"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource TemplatedParent }}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource LoginTextPassBoxFocusedForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LoginTextPassBoxMouseOverBorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LoginTextPassBoxMouseOverBorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Buttons -->

    <Style x:Key="SignInOrUpButtonVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="3" 
                            BorderBrush="{DynamicResource LoginAndRegFocusStyleBrush}" 
                            CornerRadius="{StaticResource SignInUpButtonCornerRadius}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ForgetPassAndRegButtonsVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1"
                            Margin="-3"
                            BorderBrush="{DynamicResource LoginAndRegFocusStyleBrush}" 
                            CornerRadius="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SignInOrUpButton-->
    <Style TargetType="{x:Type Button}" x:Key="SignInOrUpButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Background" Value="{StaticResource NavigationButtonColor}"/>
        <Setter Property="Margin" Value="15 0 0 0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource SignInOrUpButtonVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border CornerRadius="{StaticResource SignInUpButtonCornerRadius}" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ExitButtonColor}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ForgetPassButton-->
    <Style TargetType="{x:Type Button}" x:Key="ForgetPassButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0 15 0 0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForgetPassBrush}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ForgetPassAndRegButtonsVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border  Background="{TemplateBinding Background}">
                        <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                        <TextBlock x:Name="TextBlockContent" Text="{TemplateBinding Content}">

                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TextBlockContent" Property="TextDecorations" Value="Underline"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MoveToRegisterFormButton-->
    <Style TargetType="{x:Type Button}" x:Key="MoveToRegisterFormButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="15 0 0 15"/>
        <Setter Property="Foreground" Value="{DynamicResource MoveToRegisterFormBrush}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ForgetPassAndRegButtonsVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border  Background="{TemplateBinding Background}">
                        <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                        <TextBlock x:Name="TextBlockContent" Text="{TemplateBinding Content}">

                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TextBlockContent" Property="TextDecorations" Value="Underline"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

</ResourceDictionary>